SET(SNUFF_GRAPHICS_PREFIX "ogl")

IF (WIN32 AND NOT SNUFF_USE_OGL)
	MESSAGE(STATUS "Using DirectX ${SNUFF_DIRECTX_VERSION} graphics device")
	SET(SNUFF_GRAPHICS_PREFIX "d3d${SNUFF_DIRECTX_VERSION}")
ELSEIF (CMAKE_SYSTEM_NAME MATCHES "Linux" OR SNUFF_USE_OGL)
	MESSAGE(STATUS "Using ${SNUFF_OGL_VERSION} graphics device")
	SET(SNUFF_GRAPHICS_PREFIX "${SNUFF_OGL_VERSION}")
ENDIF ()

FILE(GLOB_RECURSE SNUFF_ENGINE_GRAPHICS
	"graphics/${SNUFF_GRAPHICS_PREFIX}/*.cc"
	"graphics/${SNUFF_GRAPHICS_PREFIX}/*.h"
)

FILE(GLOB_RECURSE SNUFF_ENGINE_MEMORY
	"memory/*.cc"
	"memory/*.h"
)

FILE(GLOB_RECURSE SNUFF_ENGINE_APPLICATION
	"application/*.cc"
	"application/*.h"
)

FILE(GLOB_RECURSE SNUFF_ENGINE_LOGGING
	"logging/*.cc"
	"logging/*.h"
)

FILE(GLOB_RECURSE SNUFF_ENGINE_CORE
	"core/*.cc"
	"core/*.h"
)

FILE(GLOB_RECURSE SNUFF_ENGINE_SERVICES
	"services/*.cc"
	"services/*.h"
)

SET(SNUFF_ENGINE_SOURCES
	${SNUFF_ENGINE_GRAPHICS}
	${SNUFF_ENGINE_MEMORY}
	${SNUFF_ENGINE_APPLICATION}
	${SNUFF_ENGINE_LOGGING}
	${SNUFF_ENGINE_CORE}
	${SNUFF_ENGINE_SERVICES}
)

SOURCE_GROUP("graphics\\${SNUFF_GRAPHICS_PREFIX}" FILES ${SNUFF_ENGINE_GRAPHICS})
SOURCE_GROUP("memory" FILES ${SNUFF_ENGINE_MEMORY})
SOURCE_GROUP("application" FILES ${SNUFF_ENGINE_APPLICATION})
SOURCE_GROUP("logging" FILES ${SNUFF_ENGINE_LOGGING})
SOURCE_GROUP("core" FILES ${SNUFF_ENGINE_CORE})
SOURCE_GROUP("services" FILES ${SNUFF_ENGINE_SERVICES})

IF (SNUFF_JAVASCRIPT)	
	FILE(GLOB_RECURSE SNUFF_ENGINE_JS
		"js/*.cc"
		"js/*.h"
	)
	
	SET(SNUFF_ENGINE_SOURCES
		${SNUFF_ENGINE_SOURCES}
		${SNUFF_ENGINE_JS}
	)
	
	SOURCE_GROUP("js" FILES ${SNUFF_ENGINE_JS})
ENDIF ()

ADD_LIBRARY(snuffbox-engine ${SNUFF_ENGINE_SOURCES})

TARGET_LINK_LIBRARIES(snuffbox-engine EASTL)
TARGET_LINK_LIBRARIES(snuffbox-engine snuffbox-logging)

IF (SNUFF_JAVASCRIPT)
	TARGET_LINK_LIBRARIES(snuffbox-engine debug "${V8_LIBS_DEBUG}" optimized "${V8_LIBS_RELEASE}")
ENDIF ()